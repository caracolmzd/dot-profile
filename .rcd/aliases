#!/bin/bash

#alias pgp=gpg2
alias pgp=gpg

alias xclip='xclip -selection c'
alias ctrl-v='xclip -o'

clip() {
	cat "$@" | tee /dev/tty | xclip -selection c
}

# alias open='xdg-open 2>/dev/null'
# open in the background
open() {
  xdg-open "$@" 2>/dev/null &
}

gless() {
  FILE="/tmp/$(basename $0).$RANDOM.txt"
  echo "$FILE" # show file name
  cat - > "$FILE" # create files
  gvim "$FILE" 2>/dev/null &
}

more-md() {
  # Check if pandoc is available
  if ! command -v pandoc &> /dev/null; then
      echo "Error: pandoc is not installed. Please install pandoc to use more-md."
      return 1
  fi

  # Check if w3m is available
  if ! command -v w3m &> /dev/null; then
      echo "Error: w3m is not installed. Please install w3m to use more-md."
      return 1
  fi

  if [ -t 0 ]; then
    # No stdin, so use the file argument
    if [ -n "$1" ]; then
      pandoc -f markdown -t html "$1" | w3m -T text/html
    else
      echo "Display markdown files in the terminal."
      echo "Usage: more-md [file]"
    fi
  else
    # Stdin is available, so use that
    pandoc -f markdown -t html | w3m -T text/html
  fi
}

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# # #
# executes arguments for every line from stdin
# e.g. ls -1p | stat -t
forevery() {
  while read -r line ; do
    # echo "'$*  $line'"
    eval "$* $line"
    echo ----
  done
}
